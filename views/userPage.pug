extends layout
block content
    include nav.pug
    div(class='container')
        section(id='profile-header')           
            div(class='profile-summary')
                img(class='profile-avatar', src=`${profileAvatar}`, style="border-radius: 50px;", alt=profileUser.username, width="110", height="110")
                h1(class='profile-name') #{profileUser.username}
                div(class='profile-stats')
                    ul(class='list-group list-group-horizontal', style='float: right;')
                        
                        li(class='list-group-item') Lists created: 
                        li(class='list-group-item') Lists completed:
                        li(class='list-group-item')
                            a(href=`${profileUser._id}/followers`)= "Followers:" 
                            a= " " + profileUser.followers.length
                        li(class='list-group-item')
                            a(href=`${profileUser._id}/following`)= "Following:"
                            a= " " + profileUser.following.length
                if !browsingUserOwnsPage 
                    if browsingUser.following.includes(`${profileUser._id}`)
                        form(action='/userPage/unfollow', method='post')
                            input(type='hidden', id='profileUserId', name='profileUserId',  value=`${profileUser._id}`)
                            input(type='hidden', id='loggedInUserId', name='loggedInUserId',  value=`${browsingUser._id}`)
                            input(type='submit', class='btn btn-secondary', value="- UnFollow")
                    else
                        form(action='/userPage/follow', method='post')
                            input(type='hidden', id='profileUserId', name='profileUserId',  value=`${profileUser._id}`)
                            input(type='hidden', id='loggedInUserId', name='loggedInUserId',  value=`${browsingUser._id}`)
                            input(type='submit', class='btn btn-primary', value="+ Follow")

        h2= "Backlogs"
        if browsingUserOwnsPage
            button(type="button"
                class="btn btn-success mb-2"
                data-toggle="modal"
                data-target="#gameListCreateForm") Create game list
            div(class="modal fade" id="gameListCreateForm" aria-hidden="true")
                div(class="modal-dialog modal-dialog-centered" role="document")
                    div(class="modal-content")
                        div(class="modal-header")
                            h5(class="modal-title") New Game List
                            button(type="button" class="close" data-dismiss="modal")
                                span(aria-hidden="true") &times;
                        div(class="modal-body")
                            form(id='createForm')
                                div(class='form-group')
                                    label(for='gameListName' class='col-form-label') Name
                                    input(type='text' class='form-control' name='title' id='gameListName' placeholder='e.g. Cozy City Builders' required)
                                div(class='form-group')
                                    label(for='gameListDesc' class='col-form-label') Description
                                    textarea(id='gameListDesc' name='description' class='form-control' placeholder='e.g. City builders for gloomy days' required)
                        div(class="modal-footer")
                            button(type="button" class="btn btn-secondary" data-dismiss="modal") Cancel
                            input(type="submit" class="btn btn-primary" id="createFormSubmit" form='createForm')

        ul(class="list-group")
          each gameList in gameLists
              li(class='d-flex flex-row')
                  a(class="list-group-item list-group-item-action float-left w-75" href=gameList.testDetailsUrl) #{gameList.title}
                      span(class="badge badge-primary badge-pill float-right ml-3") Games: #{gameList.gameIds.length}
                      span(class="badge badge-info badge-pill float-right ml-3") #{gameList.printStatus}
                      span(class="badge badge-secondary badge-pill float-right ml-3") Created: #{gameList.printDateCreated}
                  if browsingUserOwnsPage
                      a(class="btn btn-danger float-right ml-1" href="/testdb/delete/" + gameList._id)
                          i(class="fa fa-trash")
          else
              p This user doesn't have any game lists.
        
    script(src='/scripts/gameListUpdate.js')
